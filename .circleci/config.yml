version: 2.1
orbs:
  commitlint: conventional-changelog/commitlint@1.0.0
  go: circleci/go@1
  snyk: snyk/snyk@1
  prodsec: snyk/prodsec-orb@1.0

commands:
  save-build-cache:
    steps:
      - save_cache:
          name: Saving Go build cache
          key: go-build-cache-{{ .Branch }}-{{ .Revision }}
          paths:
            - /home/circleci/.cache/go-build
  restore-build-cache:
    steps:
      - restore_cache:
          name: Restoring Go build cache
          keys:
            - go-build-cache-{{ .Branch }}-{{ .Revision }}
            - go-build-cache-{{ .Branch }}-
            - go-build-cache-

jobs:
  "Snyk deps scan":
    resource_class: small
    docker:
      - image: "cimg/go:1.20"
    steps:
      - checkout
      - snyk/scan:
          fail-on-issues: true
          monitor-on-build: false # ?
          organization: snyk-apps

  "Snyk code scan":
    resource_class: small
    docker:
      - image: "cimg/go:1.20"
    steps:
      - checkout
      - snyk/scan:
          fail-on-issues: true
          monitor-on-build: false # ?
          organization: snyk-apps

  "Go test and lint":
    resource_class: medium
    executor:
      name: go/default
      tag: "1.20"
    steps:
      - checkout
      # saving & restoring the module cache takes almost 6x longer than simply fetching the modules...
      #- go/mod-download-cached
      - restore-build-cache
      - go/mod-download
      - run:
          command: |
            go mod tidy
            git diff --quiet HEAD
      - run:
          command: |
            golangci-lint run -v --timeout=2m ./...
          environment:
            # we re-use the Go build cache as our lint-cache too.
            GOLANGCI_LINT_CACHE: /home/circleci/.cache/go-build
      # we're not using the go/test command from the Go orb because that uses `-count=1` as an argument.
      # That means all tests are run every time, instead of honoring the cache.
      - run:
          command: |
            go test -race ./...
      - save-build-cache

  semantic-release:
    resource_class: small
    docker:
      - image: cimg/node:18.15
    steps:
      - checkout
      - run:
          name: Run semantic-release
          command: make release

workflows:
  "Test":
    jobs:
      - prodsec/secrets-scan:
          name: "Secrets scan"
          context:
            - snyk-bot-slack
          channel: lumos-alerts
          filters:
            branches:
              ignore: [main]
      - "Go test and lint":
          filters:
            branches:
              ignore: [main]
      - "Snyk code scan":
          context: ["snyk-apps"]
          filters:
            branches:
              ignore: [main]
      - "Snyk deps scan":
          context: ["snyk-apps"]
          filters:
            branches:
              ignore: [main]
      - commitlint/lint:
          name: Commit Lint
          filters:
            branches:
              ignore: [main]
  "Release":
    jobs:
      - "Go test and lint":
          filters:
            branches:
              only: main

      - semantic-release:
          name: Semantic Release
          context:
            - nodejs-app-release
            - team-lumos
          requires:
            - "Go test and lint"
          filters:
            branches:
              only: main
